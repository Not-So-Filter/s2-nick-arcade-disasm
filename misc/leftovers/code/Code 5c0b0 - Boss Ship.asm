

;
; +-------------------------------------------------------------------------+
; |	This file is generated by The Interactive Disassembler (IDA)	    |
; |	Copyright (c) 2007 by DataRescue sa/nv,	<ida@datarescue.com>	    |
; |	    Licensed to: GVU, Gerhard Uphoff, 1	user, adv, 10/2007	    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	7C8BCFFCE4C12F539D2BD040B4932714

; ---------------------------------------------------------------------------
; File Name   :	Z:\emu\gen\s2a\sym\code_5c0b0
; Format      :	Binary file
; Base Address:	0000h Range: 0000h - 0460h Loaded length: 0460h

; Processor:	    68000
; Target Assembler: 680x0 Assembler in MRI compatible mode
; This file should be compiled with "as	-M"

; ===========================================================================

; Segment type:	Pure code
; segment "ROM"

bossba:
		moveq	#0,d0
		move.b	$24(a0),d0
		move.w	bossba_move_tbl(pc,d0.w),d1
		jmp	bossba_move_tbl(pc,d1.w)
; ---------------------------------------------------------------------------
bossba_move_tbl:dc.w bossbainit-bossba_move_tbl	; DATA XREF: ROM:bossba_move_tblo
					; ROM:00000010o ...
		dc.w bossbamove-bossba_move_tbl
		dc.w bossbatop-bossba_move_tbl
		dc.w bossafb-bossba_move_tbl
		dc.w bosssm-bossba_move_tbl
; ---------------------------------------------------------------------------

bossbainit:				; DATA XREF: ROM:bossba_move_tblo
		move.l	#$1752E,4(a0)
		move.w	#$2400,2(a0)
		or.b	#4,1(a0)
		move.b	#$20,$19(a0) ; ' '
		move.b	#3,$18(a0)
		move.b	#$F,$20(a0)
		move.b	#2,$21(a0)
		addq.b	#2,$24(a0)
		move.w	8(a0),$30(a0)
		move.w	$C(a0),$38(a0)
		move.b	$28(a0),d0
		cmp.b	#$81,d0
		bne.s	_cnt$geba
		add.w	#$60,2(a0) ; '`'

_cnt$geba:				; CODE XREF: ROM:0000005Cj
		jsr	$DAB8		; XREF:	actwkchk2
		bne.w	_worknai$geba
		move.b	#$55,0(a1) ; 'U'
		move.l	a0,$34(a1)
		move.l	a1,$34(a0)
		move.l	#$1752E,4(a1)
		move.w	#$400,2(a1)
		move.b	#4,1(a1)
		move.b	#$20,$19(a1) ; ' '
		move.b	#3,$18(a1)
		move.l	8(a0),8(a1)
		move.l	$C(a0),$C(a1)
		addq.b	#4,$24(a1)
		move.b	#1,$1C(a1)
		move.b	1(a0),1(a1)
		move.b	$28(a0),d0
		cmp.b	#$81,d0
		bne.s	_cnt2$geba
		add.w	#$60,2(a1) ; '`'

_cnt2$geba:				; CODE XREF: ROM:000000C0j
		tst.b	$28(a0)
		bmi.s	_worknai$geba
		jsr	$DAB8		; XREF:	actwkchk2
		bne.s	_worknai$geba
		move.b	#$55,0(a1) ; 'U'
		move.l	a0,$34(a1)
		move.l	#$17486,4(a1)
		move.w	#$4D0,2(a1)
		move.b	#1,$1E(a0)
		move.b	#4,1(a1)
		move.b	#$20,$19(a1) ; ' '
		move.b	#3,$18(a1)
		move.l	8(a0),8(a1)
		move.l	$C(a0),$C(a1)
		addq.b	#6,$24(a1)
		move.b	1(a0),1(a1)

_worknai$geba:				; CODE XREF: ROM:0000006Aj
					; ROM:000000CCj ...
		move.b	$28(a0),d0
		and.w	#$7F,d0	; ''
		add.w	d0,d0
		add.w	d0,d0
		move.l	bossbaappendage(pc,d0.w),a1
		jmp	(a1)
; ---------------------------------------------------------------------------
bossbaappendage:dc.l 0			; XREF:	vacumeguy
		dc.l $16F2C		; XREF:	drillerguy
; ---------------------------------------------------------------------------

bossbamove:				; DATA XREF: ROM:00000010o
		move.b	$28(a0),d0
		and.w	#$7F,d0	; ''
		add.w	d0,d0
		add.w	d0,d0
		move.l	bossbamove_tbl(pc,d0.w),a1
		jsr	(a1)
		lea	($17522).l,a1
		jsr	$C89C		; XREF:	patchg
		move.b	$22(a0),d0
		and.b	#3,d0
		and.b	#$FC,1(a0)
		or.b	d0,1(a0)
		jmp	$C758		; XREF:	actionsub
; ---------------------------------------------------------------------------
bossbamove_tbl:	dc.l 0			; XREF:	bossvac
		dc.l $16890		; XREF:	bossdriller
; ---------------------------------------------------------------------------

bossbatop:				; DATA XREF: ROM:00000012o
		move.l	$34(a0),a1
		move.l	8(a1),8(a0)
		move.l	$C(a1),$C(a0)
		move.b	$22(a1),$22(a0)
		move.b	1(a1),1(a0)
		move.l	#$17522,a1
		jsr	$C89C		; XREF:	patchg
		jmp	$C758		; XREF:	actionsub
; ---------------------------------------------------------------------------
afbtbl:		dc.b   0,$FF,  1,  0	; 0
; ---------------------------------------------------------------------------

bossafb:				; DATA XREF: ROM:00000014o
		btst	#7,$22(a0)
		bne.s	_hurt$neba
		move.l	$34(a0),a1
		move.l	8(a1),8(a0)
		move.l	$C(a1),$C(a0)
		move.b	$22(a1),$22(a0)
		move.b	1(a1),1(a0)
		subq.b	#1,$1E(a0)
		bpl.s	_jump$neba
		move.b	#1,$1E(a0)
		move.b	$2A(a0),d0
		addq.b	#1,d0
		cmp.b	#2,d0
		ble.s	_cnt$neba
		moveq	#0,d0

_cnt$neba:				; CODE XREF: ROM:000001E0j
		move.b	afbtbl(pc,d0.w),$1A(a0)
		move.b	d0,$2A(a0)

_jump$neba:				; CODE XREF: ROM:000001CEj
		cmp.b	#$FF,$1A(a0)
		bne.w	$408		; XREF:	actionsub
		rts
; ---------------------------------------------------------------------------

_hurt$neba:				; CODE XREF: ROM:000001ACj
		move.l	$34(a0),a1
		btst	#6,$2E(a1)
		bne.s	_here$neba
		rts
; ---------------------------------------------------------------------------

_here$neba:				; CODE XREF: ROM:00000204j
		addq.b	#2,$24(a0)
		move.l	#$1749E,4(a0)
		move.w	#$4D8,2(a0)
		move.b	#0,$1A(a0)
		move.b	#5,$1E(a0)
		move.l	$34(a0),a1
		move.w	8(a1),8(a0)
		move.w	$C(a1),$C(a0)
		add.w	#4,$C(a0)
		sub.w	#$28,8(a0) ; '('
		rts
; ---------------------------------------------------------------------------

bosssm:					; DATA XREF: ROM:00000016o
		subq.b	#1,$1E(a0)
		bpl.s	_jump$oeba
		move.b	#5,$1E(a0)
		addq.b	#1,$1A(a0)
		cmp.b	#4,$1A(a0)
		bne.w	_jump$oeba
		move.b	#0,$1A(a0)
		move.l	$34(a0),a1
		move.b	(a1),d0
		beq.w	$40E		; XREF:	frameout
		move.w	8(a1),8(a0)
		move.w	$C(a1),$C(a0)
		add.w	#4,$C(a0)
		sub.w	#$28,8(a0) ; '('

_jump$oeba:				; CODE XREF: ROM:00000248j
					; ROM:0000025Aj
		bra.w	$408		; XREF:	actionsub
; ---------------------------------------------------------------------------

billbomb:
		moveq	#0,d0
		move.b	$24(a0),d0
		move.w	billbomb_tbl(pc,d0.w),d1
		jmp	billbomb_tbl(pc,d1.w)
; ---------------------------------------------------------------------------
billbomb_tbl:	dc.w billbombinit-billbomb_tbl ; DATA XREF: ROM:billbomb_tblo
					; ROM:0000029Ao
		dc.w billbombmove-billbomb_tbl
; ---------------------------------------------------------------------------

billbombinit:				; DATA XREF: ROM:billbomb_tblo
		addq.b	#2,$24(a0)
		move.l	#$174CE,4(a0)
		move.w	#$5A0,2(a0)
		move.b	#4,1(a0)
		move.b	#1,$18(a0)
		move.b	#0,$20(a0)
		move.b	#$C,$19(a0)
		move.b	#7,$1E(a0)
		move.b	#0,$1A(a0)
		rts
; ---------------------------------------------------------------------------

billbombmove:				; DATA XREF: ROM:0000029Ao
		subq.b	#1,$1E(a0)
		bpl.s	_jump$seba
		move.b	#7,$1E(a0)
		addq.b	#1,$1A(a0)
		cmp.b	#7,$1A(a0)
		beq.w	$40E		; XREF:	frameout

_jump$seba:				; CODE XREF: ROM:000002D8j
		bra.w	$408		; XREF:	actionsub
; ---------------------------------------------------------------------------
bossafbpat:	dc.w afbsp00-bossafbpat	; DATA XREF: ROM:bossafbpato
					; ROM:000002F4o
		dc.w afbsp01-bossafbpat
afbsp00:	dc.w 1			; DATA XREF: ROM:bossafbpato
		dc.w	 5,    0,    0,	 $1C; 0
afbsp01:	dc.w 1			; DATA XREF: ROM:000002F4o
		dc.w	 5,    4,    2,	 $1C; 0
bosssmpat:	dc.w smbsp00-bosssmpat	; DATA XREF: ROM:bosssmpato
					; ROM:0000030Co ...
		dc.w smbsp01-bosssmpat
		dc.w smbsp02-bosssmpat
		dc.w smbsp03-bosssmpat
smbsp00:	dc.w 1			; DATA XREF: ROM:bosssmpato
		dc.w $F805,    0,    0,$FFF8; 0
smbsp01:	dc.w 1			; DATA XREF: ROM:0000030Co
		dc.w $F805,    4,    2,$FFF8; 0
smbsp02:	dc.w 1			; DATA XREF: ROM:0000030Eo
		dc.w $F805,    8,    4,$FFF8; 0
smbsp03:	dc.w 1			; DATA XREF: ROM:00000310o
		dc.w $F805,   $C,    6,$FFF8; 0
billbombpat:	dc.w bossbmsp00-billbombpat ; DATA XREF: ROM:billbombpato
					; ROM:0000033Co ...
		dc.w bossbmsp01-billbombpat
		dc.w bossbmsp02-billbombpat
		dc.w bossbmsp03-billbombpat
		dc.w bossbmsp04-billbombpat
		dc.w bossbmsp05-billbombpat
		dc.w bossbmsp06-billbombpat
bossbmsp00:	dc.w 1			; DATA XREF: ROM:billbombpato
		dc.w $F805,    0,    0,$FFF8; 0
bossbmsp01:	dc.w 1			; DATA XREF: ROM:0000033Co
		dc.w $F00F,    4,    2,$FFF0; 0
bossbmsp02:	dc.w 1			; DATA XREF: ROM:0000033Eo
		dc.w $F00F,  $14,   $A,$FFF0; 0
bossbmsp03:	dc.w 1			; DATA XREF: ROM:00000340o
		dc.w $F00F,  $24,  $12,$FFF0; 0
bossbmsp04:	dc.w 1			; DATA XREF: ROM:00000342o
		dc.w $F00F,  $34,  $1A,$FFF0; 0
bossbmsp05:	dc.w 1			; DATA XREF: ROM:00000344o
		dc.w $F00F,  $44,  $22,$FFF0; 0
bossbmsp06:	dc.w 1			; DATA XREF: ROM:00000346o
		dc.w $F00F,  $54,  $2A,$FFF0; 0
bossbachg:	dc.w bossbachg1-bossbachg ; DATA XREF: ROM:bossbachgo
					; ROM:00000390o
		dc.w bossbachg2-bossbachg
bossbachg1:	dc.b  $F,  0,$FF	; 0 ; DATA XREF: ROM:bossbachgo
bossbachg2:	dc.b   7,  1,  2,$FF,  0; 0 ; DATA XREF: ROM:00000390o
bossbapat:	dc.w bossbasp00-bossbapat ; DATA XREF: ROM:bossbapato
					; ROM:0000039Co ...
		dc.w bossbasp01-bossbapat
		dc.w bossbasp02-bossbapat
bossbasp00:	dc.w 4			; DATA XREF: ROM:bossbapato
		dc.w $F805,    0,    0,$FFE0; 0
		dc.w  $805,    4,    2,$FFE0; 4
		dc.w $F80F,    8,    4,$FFF0; 8
		dc.w $F807,  $18,   $C,	 $10; 12
bossbasp01:	dc.w 4			; DATA XREF: ROM:0000039Co
		dc.w $E805,  $28,  $14,$FFE0; 0
		dc.w $E80D,  $30,  $18,$FFF0; 4
		dc.w $E805,  $24,  $12,	 $10; 8
		dc.w $D805,  $20,  $10,	   2; 12
bossbasp02:	dc.w 4			; DATA XREF: ROM:0000039Eo
		dc.w $E805,  $28,  $14,$FFE0; 0
		dc.w $E80D,  $38,  $1C,$FFF0; 4
		dc.w $E805,  $24,  $12,	 $10; 8
		dc.w $D805,  $20,  $10,	   2; 12
; ---------------------------------------------------------------------------
		nop
; end of 'ROM'


		END
