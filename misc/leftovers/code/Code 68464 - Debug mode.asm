

;
; +-------------------------------------------------------------------------+
; |	This file is generated by The Interactive Disassembler (IDA)	    |
; |	Copyright (c) 2007 by DataRescue sa/nv,	<ida@datarescue.com>	    |
; |	    Licensed to: GVU, Gerhard Uphoff, 1	user, adv, 10/2007	    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	3F52BE1B536637DE458F826BDE56651E

; ---------------------------------------------------------------------------
; File Name   :	Z:\emu\gen\s2a\sym\copies\code_68464
; Format      :	Binary file
; Base Address:	0000h Range: 0000h - 04A8h Loaded length: 04A8h

; Processor:	    68000
; Target Assembler: 680x0 Assembler in MRI compatible mode
; This file should be compiled with "as	-M"

; ===========================================================================

; Segment type:	Pure code
; segment "ROM"
		moveq	#0,d0
		move.b	($FFFFFE08).w,d0
		move.w	off_E(pc,d0.w),d1
		jmp	off_E(pc,d1.w)
; ---------------------------------------------------------------------------
off_E:		dc.w loc_12-off_E	; DATA XREF: ROM:off_Eo ROM:00000010o
		dc.w loc_88-off_E
; ---------------------------------------------------------------------------

loc_12:					; DATA XREF: ROM:off_Eo
		addq.b	#2,($FFFFFE08).w
		move.w	($FFFFEECC).w,($FFFFFEF0).w
		move.w	($FFFFEEC6).w,($FFFFFEF2).w
		move.w	#0,($FFFFEECC).w
		move.w	#$720,($FFFFEEC6).w
		and.w	#$7FF,($FFFFB00C).w
		and.w	#$7FF,($FFFFEE04).w
		and.w	#$3FF,($FFFFEE0C).w
		move.b	#0,$1A(a0)
		move.b	#0,$1C(a0)
		cmp.b	#$10,($FFFFF600).w
		bne.s	loc_58
		moveq	#6,d0
		bra.s	loc_5E
; ---------------------------------------------------------------------------

loc_58:					; CODE XREF: ROM:00000052j
		moveq	#0,d0
		move.b	($FFFFFE10).w,d0

loc_5E:					; CODE XREF: ROM:00000056j
		lea	($1AD40).l,a2
		add.w	d0,d0
		add.w	(a2,d0.w),a2
		move.w	(a2)+,d6
		cmp.b	($FFFFFE06).w,d6
		bhi.s	loc_78
		move.b	#0,($FFFFFE06).w

loc_78:					; CODE XREF: ROM:00000070j
		bsr.w	sub_220
		move.b	#$C,($FFFFFE0A).w
		move.b	#1,($FFFFFE0B).w

loc_88:					; DATA XREF: ROM:00000010o
		moveq	#6,d0
		cmp.b	#$10,($FFFFF600).w
		beq.s	loc_98
		moveq	#0,d0
		move.b	($FFFFFE10).w,d0

loc_98:					; CODE XREF: ROM:00000090j
		lea	($1AD40).l,a2
		add.w	d0,d0
		add.w	(a2,d0.w),a2
		move.w	(a2)+,d6
		bsr.w	sub_B0
		jmp	$C758

; =============== S U B	R O U T	I N E =======================================


sub_B0:					; CODE XREF: ROM:000000A6p
		moveq	#0,d4
		move.w	#1,d1
		move.b	($FFFFF605).w,d4
		and.w	#$F,d4
		bne.s	loc_F2
		move.b	($FFFFF604).w,d0
		and.w	#$F,d0
		bne.s	loc_DA
		move.b	#$C,($FFFFFE0A).w
		move.b	#$F,($FFFFFE0B).w
		bra.w	loc_148
; ---------------------------------------------------------------------------

loc_DA:					; CODE XREF: sub_B0+18j
		subq.b	#1,($FFFFFE0A).w
		bne.s	loc_F6
		move.b	#1,($FFFFFE0A).w
		addq.b	#1,($FFFFFE0B).w
		bne.s	loc_F2
		move.b	#$FF,($FFFFFE0B).w

loc_F2:					; CODE XREF: sub_B0+Ej	sub_B0+3Aj
		move.b	($FFFFF604).w,d4

loc_F6:					; CODE XREF: sub_B0+2Ej
		moveq	#0,d1
		move.b	($FFFFFE0B).w,d1
		addq.w	#1,d1
		swap	d1
		asr.l	#4,d1
		move.l	$C(a0),d2
		move.l	8(a0),d3
		btst	#0,d4
		beq.s	loc_116
		sub.l	d1,d2
		bcc.s	loc_116
		moveq	#0,d2

loc_116:				; CODE XREF: sub_B0+5Ej sub_B0+62j
		btst	#1,d4
		beq.s	loc_12C
		add.l	d1,d2
		cmp.l	#$7FF0000,d2
		bcs.s	loc_12C
		move.l	#$7FF0000,d2

loc_12C:				; CODE XREF: sub_B0+6Aj sub_B0+74j
		btst	#2,d4
		beq.s	loc_138
		sub.l	d1,d3
		bcc.s	loc_138
		moveq	#0,d3

loc_138:				; CODE XREF: sub_B0+80j sub_B0+84j
		btst	#3,d4
		beq.s	loc_140
		add.l	d1,d3

loc_140:				; CODE XREF: sub_B0+8Cj
		move.l	d2,$C(a0)
		move.l	d3,8(a0)

loc_148:				; CODE XREF: sub_B0+26j
		btst	#6,($FFFFF604).w
		beq.s	loc_180
		btst	#5,($FFFFF605).w
		beq.s	loc_164
		subq.b	#1,($FFFFFE06).w
		bcc.s	loc_17C
		add.b	d6,($FFFFFE06).w
		bra.s	loc_17C
; ---------------------------------------------------------------------------

loc_164:				; CODE XREF: sub_B0+A6j
		btst	#6,($FFFFF605).w
		beq.s	loc_180
		addq.b	#1,($FFFFFE06).w
		cmp.b	($FFFFFE06).w,d6
		bhi.s	loc_17C
		move.b	#0,($FFFFFE06).w

loc_17C:				; CODE XREF: sub_B0+ACj sub_B0+B2j ...
		bra.w	sub_220
; ---------------------------------------------------------------------------

loc_180:				; CODE XREF: sub_B0+9Ej sub_B0+BAj
		btst	#5,($FFFFF605).w
		beq.s	loc_1C4
		jsr	$DAA2
		bne.s	loc_1C4
		move.w	8(a0),8(a1)
		move.w	$C(a0),$C(a1)
		move.b	4(a0),0(a1)
		move.b	1(a0),1(a1)
		move.b	1(a0),$22(a1)
		and.b	#$7F,$22(a1) ; ''
		moveq	#0,d0
		move.b	($FFFFFE06).w,d0
		lsl.w	#3,d0
		move.b	4(a2,d0.w),$28(a1)
		rts
; ---------------------------------------------------------------------------

loc_1C4:				; CODE XREF: sub_B0+D6j sub_B0+DEj
		btst	#4,($FFFFF605).w
		beq.s	return_21E
		moveq	#0,d0
		move.w	d0,($FFFFFE08).w
		move.l	#$914C0,($FFFFB004).w
		move.w	#$780,($FFFFB002).w
		tst.w	($FFFFFFE8).w
		beq.s	loc_1EC
		move.w	#$3C0,($FFFFB002).w

loc_1EC:				; CODE XREF: sub_B0+134j
		move.b	d0,($FFFFB01C).w
		move.w	d0,$A(a0)
		move.w	d0,$E(a0)
		move.w	($FFFFFEF0).w,($FFFFEECC).w
		move.w	($FFFFFEF2).w,($FFFFEEC6).w
		cmp.b	#$10,($FFFFF600).w
		bne.s	return_21E
		move.b	#2,($FFFFB01C).w
		bset	#2,($FFFFB022).w
		bset	#1,($FFFFB022).w

return_21E:				; CODE XREF: sub_B0+11Aj sub_B0+15Aj
		rts
; End of function sub_B0


; =============== S U B	R O U T	I N E =======================================


sub_220:				; CODE XREF: ROM:loc_78p
					; sub_B0:loc_17Cj
		moveq	#0,d0
		move.b	($FFFFFE06).w,d0
		lsl.w	#3,d0
		move.l	(a2,d0.w),4(a0)
		move.w	6(a2,d0.w),2(a0)
		move.b	5(a2,d0.w),$1A(a0)
		bsr.w	$450
		rts
; End of function sub_220

; ---------------------------------------------------------------------------
off_240:	dc.w word_24E-off_240	; DATA XREF: ROM:off_240o
					; ROM:00000242o ...
		dc.w word_2C0-off_240
		dc.w word_2C0-off_240
		dc.w word_2FA-off_240
		dc.w word_3D4-off_240
		dc.w word_3D4-off_240
		dc.w word_3D4-off_240
word_24E:	dc.w $E			; DATA XREF: ROM:off_240o
		dc.l $2500A54A		; 0
		dc.l	 $26BC		; 1
		dc.l $2600ABF0		; 2
		dc.l	  $680		; 3
		dc.l $1F009C84		; 4
		dc.l	  $400		; 5
		dc.l $22009FC2		; 6
		dc.l	  $444		; 7
		dc.l $2B00B11E		; 8
		dc.l	  $470		; 9
		dc.l $3600C17E		; 10
		dc.l	  $4A0		; 11
		dc.l $180084AE		; 12
		dc.l	 $4000		; 13
		dc.l $3B00C202		; 14
		dc.l	 $66C0		; 15
		dc.l $4000EA80		; 16
		dc.l	  $4E0		; 17
		dc.l $4100E0B4		; 18
		dc.l	  $4A8		; 19
		dc.l $4200E4A8		; 20
		dc.l	 $249B		; 21
		dc.l $4400E640		; 22
		dc.l	 $434C		; 23
		dc.l $79012D74		; 24
		dc.l  $10026BC		; 25
		dc.l  $3013602		; 26
		dc.l	 $26BC		; 27
word_2C0:	dc.w 7			; DATA XREF: ROM:00000242o
					; ROM:00000244o
		dc.l $2500A54A		; 0
		dc.l	 $26BC		; 1
		dc.l $2600ABF0		; 2
		dc.l	  $680		; 3
		dc.l $4100E0B4		; 4
		dc.l	  $4A8		; 5
		dc.l  $3013602		; 6
		dc.l	  $7BC		; 7
		dc.l  $B013736		; 8
		dc.l	 $E000		; 9
		dc.l  $C01385E		; 10
		dc.l	 $E418		; 11
		dc.l $15007EDA		; 12
		dc.l  $8002418		; 13
word_2FA:	dc.w $12		; DATA XREF: ROM:00000246o
		dc.l $2500A54A		; 0
		dc.l	 $26BC		; 1
		dc.l $2600ABF0		; 2
		dc.l	  $680		; 3
		dc.l $79012D74		; 4
		dc.l  $100047C		; 5
		dc.l  $3013602		; 6
		dc.l	 $26BC		; 7
		dc.l $490147F6		; 8
		dc.l	 $23AE		; 9
		dc.l $490147F6		; 10
		dc.l  $20323AE		; 11
		dc.l $18008556		; 12
		dc.l  $1004000		; 13
		dc.l $18008556		; 14
		dc.l  $A014000		; 15
		dc.l $3600C17E		; 16
		dc.l	 $2434		; 17
		dc.l $140144EC		; 18
		dc.l	  $3CE		; 19
		dc.l $4100E12C		; 20
		dc.l $8000045C		; 21
		dc.l $4100E12C		; 22
		dc.l $90030470		; 23
		dc.l $4100E12C		; 24
		dc.l $A006045C		; 25
		dc.l $4100E12C		; 26
		dc.l $3007043C		; 27
		dc.l $4100E12C		; 28
		dc.l $400A043C		; 29
		dc.l $4B015A34		; 30
		dc.l	  $3E6		; 31
		dc.l $54016838		; 32
		dc.l	  $402		; 33
		dc.l $530165A6		; 34
		dc.l	  $41C		; 35
		dc.l $4F014F16		; 36
		dc.l	  $500		; 37
		dc.l $52014DB2		; 38
		dc.l	 $2530		; 39
		dc.l $5001542C		; 40
		dc.l	 $2570		; 41
		dc.l $5101542C		; 42
		dc.l	 $2570		; 43
		dc.l $4D014A3A		; 44
		dc.l	 $23C4		; 45
		dc.l $4B015A34		; 46
		dc.l	  $32C		; 47
		dc.l $4E016330		; 48
		dc.l	 $2300		; 49
		dc.l $4C016016		; 50
		dc.l	 $2350		; 51
		dc.l $4A015CCC		; 52
		dc.l	 $238A		; 53
word_3D4:	dc.w $F			; DATA XREF: ROM:00000248o
					; ROM:0000024Ao ...
		dc.l $2500A54A		; 0
		dc.l	 $26BC		; 1
		dc.l $2600ABF0		; 2
		dc.l	  $680		; 3
		dc.l $1C008E04		; 4
		dc.l $2103E485		; 5
		dc.l $13013A6C		; 6
		dc.l  $404E415		; 7
		dc.l $1A008C64		; 8
		dc.l	 $4475		; 9
		dc.l  $3013602		; 10
		dc.l	 $26BC		; 11
		dc.l $4F014F16		; 12
		dc.l	  $500		; 13
		dc.l $52014DB2		; 14
		dc.l	 $2530		; 15
		dc.l $5001542C		; 16
		dc.l	 $2570		; 17
		dc.l $5101542C		; 18
		dc.l	 $2570		; 19
		dc.l $4D014A3A		; 20
		dc.l	 $23C4		; 21
		dc.l $4B015A34		; 22
		dc.l	  $32C		; 23
		dc.l $4E016330		; 24
		dc.l	 $2300		; 25
		dc.l $4C016016		; 26
		dc.l	 $2350		; 27
		dc.l $4A015CCC		; 28
		dc.l	 $238A		; 29
; ---------------------------------------------------------------------------
		nop
; end of 'ROM'


		END
