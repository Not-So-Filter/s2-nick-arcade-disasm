

;
; +-------------------------------------------------------------------------+
; |	This file is generated by The Interactive Disassembler (IDA)	    |
; |	Copyright (c) 2007 by DataRescue sa/nv,	<ida@datarescue.com>	    |
; |	    Licensed to: GVU, Gerhard Uphoff, 1	user, adv, 10/2007	    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	8BAF7BA156E398C09836D93A59A17D5E

; ---------------------------------------------------------------------------
; File Name   :	Z:\emu\gen\s2a\sym\copies\code_62230
; Format      :	Binary file
; Base Address:	0000h Range: 0000h - 03E4h Loaded length: 03E4h

; Processor:	    68000
; Target Assembler: 680x0 Assembler in MRI compatible mode
; This file should be compiled with "as	-M"

; ===========================================================================

; Segment type:	Pure code
; segment "ROM"

pcol:
		nop
		bsr.w	$392		; XREF:	ringcolchk
		move.w	8(a0),d2
		move.w	$C(a0),d3
		sub.w	#8,d2
		moveq	#0,d5
		move.b	$16(a0),d5
		subq.b	#3,d5
		sub.w	d5,d3
		cmp.b	#$39,$1A(a0) ; '9'
		bne.s	loc_2A
		add.w	#$C,d3
		moveq	#$A,d5

loc_2A:					; CODE XREF: ROM:00000022j
		move.w	#$10,d4
		add.w	d5,d5
		lea	($FFFFB800).w,a1
		move.w	#$5F,d6	; '_'

_loop$ldba:				; CODE XREF: ROM:00000042j
		move.b	$20(a1),d0
		bne.s	loc_92

loc_3E:					; CODE XREF: ROM:000000B0j
					; ROM:000000B6j ...
		lea	$40(a1),a1
		dbf	d6,_loop$ldba
		moveq	#0,d0

return_48:
		rts
; ---------------------------------------------------------------------------
		dc.b $14,$14		; 0
		dc.b  $C,$14		; 2
		dc.b $14, $C		; 4
		dc.b   4,$10		; 6
		dc.b  $C,$12		; 8
		dc.b $10,$10		; 10
		dc.b   6,  6		; 12
		dc.b $18, $C		; 14
		dc.b  $C,$10		; 16
		dc.b $10, $C		; 18
		dc.b   8,  8		; 20
		dc.b $14,$10		; 22
		dc.b $14,  8		; 24
		dc.b  $E, $E		; 26
		dc.b $18,$18		; 28
		dc.b $28,$10		; 30
		dc.b $10,$18		; 32
		dc.b   8,$10		; 34
		dc.b $20,$70		; 36
		dc.b $40,$20		; 38
		dc.b $80,$20		; 40
		dc.b $20,$20		; 42
		dc.b   8,  8		; 44
		dc.b   4,  4		; 46
		dc.b $20,  8		; 48
		dc.b  $C, $C		; 50
		dc.b   8,  4		; 52
		dc.b $18,  4		; 54
		dc.b $28,  4		; 56
		dc.b   4,  8		; 58
		dc.b   4,$18		; 60
		dc.b   4,$28		; 62
		dc.b   4,$20		; 64
		dc.b $18,$18		; 66
		dc.b  $C,$18		; 68
		dc.b $48,  8		; 70
; ---------------------------------------------------------------------------

loc_92:					; CODE XREF: ROM:0000003Cj
		and.w	#$3F,d0	; '?'
		add.w	d0,d0
		lea	return_48(pc,d0.w),a2
		moveq	#0,d1
		move.b	(a2)+,d1
		move.w	8(a1),d0
		sub.w	d1,d0
		sub.w	d2,d0
		bcc.s	loc_B4
		add.w	d1,d1
		add.w	d1,d0
		bcs.s	loc_BA
		bra.w	loc_3E
; ---------------------------------------------------------------------------

loc_B4:					; CODE XREF: ROM:000000A8j
		cmp.w	d4,d0
		bhi.w	loc_3E

loc_BA:					; CODE XREF: ROM:000000AEj
		moveq	#0,d1
		move.b	(a2)+,d1
		move.w	$C(a1),d0
		sub.w	d1,d0
		sub.w	d3,d0
		bcc.s	loc_D2
		add.w	d1,d1
		add.w	d1,d0
		bcs.s	_atari$ldba
		bra.w	loc_3E
; ---------------------------------------------------------------------------

loc_D2:					; CODE XREF: ROM:000000C6j
		cmp.w	d5,d0
		bhi.w	loc_3E

_atari$ldba:				; CODE XREF: ROM:000000CCj
		move.b	$20(a1),d1
		and.b	#$C0,d1
		beq.w	loc_152
		cmp.b	#$C0,d1
		beq.w	pcolspecial
		tst.b	d1
		bmi.w	loc_20A
		move.b	$20(a1),d0
		and.b	#$3F,d0	; '?'
		cmp.b	#6,d0
		beq.s	loc_112
		cmp.w	#$5A,$30(a0) ; 'Z'
		bcc.w	return_110
		move.b	#4,$24(a1)

return_110:				; CODE XREF: ROM:00000106j
		rts
; ---------------------------------------------------------------------------

loc_112:				; CODE XREF: ROM:000000FEj
		tst.w	$12(a0)
		bpl.s	_item2$mdba
		move.w	$C(a0),d0
		sub.w	#$10,d0
		cmp.w	$C(a1),d0
		bcs.s	return_150
		neg.w	$12(a0)
		move.w	#$FE80,$12(a1)
		tst.b	$25(a1)
		bne.s	return_150
		move.b	#4,$25(a1)
		rts
; ---------------------------------------------------------------------------

_item2$mdba:				; CODE XREF: ROM:00000116j
		cmp.b	#2,$1C(a0)
		bne.s	return_150
		neg.w	$12(a0)
		move.b	#4,$24(a1)

return_150:				; CODE XREF: ROM:00000124j
					; ROM:00000134j ...
		rts
; ---------------------------------------------------------------------------

loc_152:				; CODE XREF: ROM:000000E0j
					; ROM:loc_36Ej
		tst.b	($FFFFFE2D).w
		bne.s	loc_16A
		cmp.b	#9,$1C(a0)
		beq.s	loc_16A
		cmp.b	#2,$1C(a0)
		bne.w	loc_20A

loc_16A:				; CODE XREF: ROM:00000156j
					; ROM:0000015Ej
		tst.b	$21(a1)
		beq.s	loc_194
		neg.w	$10(a0)
		neg.w	$12(a0)
		asr	$10(a0)
		asr	$12(a0)
		move.b	#0,$20(a1)
		subq.b	#1,$21(a1)
		bne.s	return_192
		bset	#7,$22(a1)

return_192:				; CODE XREF: ROM:0000018Aj
		rts
; ---------------------------------------------------------------------------

loc_194:				; CODE XREF: ROM:0000016Ej
		bset	#7,$22(a1)
		moveq	#0,d0
		move.w	($FFFFF7D0).w,d0
		addq.w	#2,($FFFFF7D0).w
		cmp.w	#6,d0
		bcs.s	loc_1AC
		moveq	#6,d0

loc_1AC:				; CODE XREF: ROM:000001A8j
		move.w	d0,$3E(a1)
		move.w	escoretbl(pc,d0.w),d0
		cmp.w	#$20,($FFFFF7D0).w ; ' '
		bcs.s	loc_1C6
		move.w	#$3E8,d0
		move.w	#$A,$3E(a1)

loc_1C6:				; CODE XREF: ROM:000001BAj
		bsr.w	$1A98		; XREF:	scoreup
		move.b	#$27,0(a1) ; '''
		move.b	#0,$24(a1)
		tst.w	$12(a0)
		bmi.s	loc_1EC
		move.w	$C(a0),d0
		cmp.w	$C(a1),d0
		bcc.s	loc_1F4
		neg.w	$12(a0)
		rts
; ---------------------------------------------------------------------------

loc_1EC:				; CODE XREF: ROM:000001DAj
		add.w	#$100,$12(a0)
		rts
; ---------------------------------------------------------------------------

loc_1F4:				; CODE XREF: ROM:000001E4j
		sub.w	#$100,$12(a0)
		rts
; ---------------------------------------------------------------------------
escoretbl:	dc.w	10,   20,   50,	 100; 0
; ---------------------------------------------------------------------------

pcolplay2:				; CODE XREF: ROM:_imo$vdbaj
		bset	#7,$22(a1)

loc_20A:				; CODE XREF: ROM:000000EEj
					; ROM:00000166j ...
		tst.b	($FFFFFE2D).w
		beq.s	pcole

loc_210:				; CODE XREF: ROM:0000021Aj
		moveq	#$FFFFFFFF,d0
		rts
; ---------------------------------------------------------------------------

pcole:					; CODE XREF: ROM:0000020Ej
		nop
		tst.w	$30(a0)
		bne.s	loc_210
		move.l	a1,a2

playdamageset:
		tst.b	($FFFFFE2C).w
		bne.s	_worknai$tdba
		tst.w	($FFFFFE20).w
		beq.w	loc_2BA

loc_22C:				; XREF:	actwkchk
		jsr	$DAA2
		bne.s	_worknai$tdba
		move.b	#$37,0(a1) ; '7'
		move.w	8(a0),8(a1)
		move.w	$C(a0),$C(a1)

_worknai$tdba:				; CODE XREF: ROM:00000222j
					; ROM:00000232j ...
		move.b	#0,($FFFFFE2C).w
		move.b	#4,$24(a0)
		bsr.w	$38C		; XREF:	jumpcolsub
		bset	#1,$22(a0)

loc_25C:
		move.w	#$FC00,$12(a0)
		move.w	#$FE00,$10(a0)
		btst	#6,$22(a0)
		beq.s	loc_27C
		move.w	#$FE00,$12(a0)
		move.w	#$FF00,$10(a0)

loc_27C:				; CODE XREF: ROM:0000026Ej
		move.w	8(a0),d0
		cmp.w	8(a2),d0
		bcs.s	loc_28A
		neg.w	$10(a0)

loc_28A:				; CODE XREF: ROM:00000284j
		move.w	#0,$14(a0)
		move.b	#$1A,$1C(a0)
		move.w	#$78,$30(a0) ; 'x'
		move.w	#$A3,d0	; '£'
		cmp.b	#$36,(a2) ; '6'
		bne.s	loc_2B0
		cmp.b	#$16,(a2)
		bne.s	loc_2B0
		move.w	#$A6,d0	; '¦'

loc_2B0:				; CODE XREF: ROM:000002A4j
					; ROM:000002AAj
		jsr	($12FC).l	; XREF:	soundset

_end$tdba:
		moveq	#$FFFFFFFF,d0
		rts
; ---------------------------------------------------------------------------

loc_2BA:				; CODE XREF: ROM:00000228j
		tst.w	($FFFFFFFA).w
		bne.w	_worknai$tdba

playdieset:
		tst.w	($FFFFFE08).w
		bne.s	loc_316
		move.b	#0,($FFFFFE2D).w
		move.b	#6,$24(a0)
		bsr.w	$38C		; XREF:	jumpcolsub
		bset	#1,$22(a0)
		move.w	#$F900,$12(a0)
		move.w	#0,$10(a0)
		move.w	#0,$14(a0)
		move.w	$C(a0),$38(a0)
		move.b	#$18,$1C(a0)
		bset	#7,2(a0)
		move.w	#$A3,d0	; '£'
		cmp.b	#$36,(a2) ; '6'
		bne.s	loc_310
		move.w	#$A6,d0	; '¦'

loc_310:				; CODE XREF: ROM:0000030Aj
		jsr	($12FC).l	; XREF:	soundset

loc_316:				; CODE XREF: ROM:000002C6j
		moveq	#$FFFFFFFF,d0
		rts
; ---------------------------------------------------------------------------

pcolspecial:				; CODE XREF: ROM:000000E8j
		move.b	$20(a1),d1
		and.b	#$3F,d1	; '?'
		cmp.b	#$B,d1
		beq.s	_imo$vdba
		cmp.b	#$C,d1
		beq.s	loc_340
		cmp.b	#$17,d1
		beq.s	_bobin$vdba
		cmp.b	#$21,d1	; '!'
		beq.s	loc_384
		rts
; ---------------------------------------------------------------------------

_imo$vdba:				; CODE XREF: ROM:00000326j
		bra.w	pcolplay2
; ---------------------------------------------------------------------------

loc_340:				; CODE XREF: ROM:0000032Cj
		sub.w	d0,d5
		cmp.w	#8,d5
		bcc.s	loc_36E
		move.w	8(a1),d0
		subq.w	#4,d0
		btst	#0,$22(a1)
		beq.s	loc_35A
		sub.w	#$10,d0

loc_35A:				; CODE XREF: ROM:00000354j
		sub.w	d2,d0
		bcc.s	loc_366
		add.w	#$18,d0
		bcs.s	loc_36A
		bra.s	loc_36E
; ---------------------------------------------------------------------------

loc_366:				; CODE XREF: ROM:0000035Cj
		cmp.w	d4,d0
		bhi.s	loc_36E

loc_36A:				; CODE XREF: ROM:00000362j
		bra.w	loc_20A
; ---------------------------------------------------------------------------

loc_36E:				; CODE XREF: ROM:00000346j
					; ROM:00000364j ...
		bra.w	loc_152
; ---------------------------------------------------------------------------

_bobin$vdba:				; CODE XREF: ROM:00000332j
		move.w	a0,d1
		sub.w	#$B000,d1
		beq.s	loc_37E
		addq.b	#1,$21(a1)

loc_37E:				; CODE XREF: ROM:00000378j
		addq.b	#1,$21(a1)
		rts
; ---------------------------------------------------------------------------

loc_384:				; CODE XREF: ROM:00000338j
		addq.b	#1,$21(a1)
		rts
; ---------------------------------------------------------------------------
		nop
; end of 'ROM'


		END
