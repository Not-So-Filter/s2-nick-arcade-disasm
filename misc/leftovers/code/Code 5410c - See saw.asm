

;
; +-------------------------------------------------------------------------+
; |	This file is generated by The Interactive Disassembler (IDA)	    |
; |	Copyright (c) 2007 by DataRescue sa/nv,	<ida@datarescue.com>	    |
; |	    Licensed to: GVU, Gerhard Uphoff, 1	user, adv, 10/2007	    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	BF04BD548C2DA3A99662F790B7A76831

; ---------------------------------------------------------------------------
; File Name   :	Z:\emu\gen\s2a\sym\copies\code_5410c
; Format      :	Binary file
; Base Address:	0000h Range: 0000h - 046Ch Loaded length: 046Ch

; Processor:	    68000
; Target Assembler: 680x0 Assembler in MRI compatible mode
; This file should be compiled with "as	-M"

; ===========================================================================

; Segment type:	Pure code
; segment "ROM"

sisoo:
		moveq	#0,d0
		move.b	$24(a0),d0
		move.w	off_26(pc,d0.w),d1
		jsr	off_26(pc,d1.w)
		move.w	$30(a0),d0
		and.w	#$FF80,d0
		sub.w	($FFFFF7DA).w,d0
		cmp.w	#$280,d0
		bhi.w	$FFFF8762	; XREF:	frameout
		bra.w	$FFFF862C	; XREF:	actionsub
; ---------------------------------------------------------------------------
off_26:		dc.w sisooinit-off_26	; DATA XREF: ROM:off_26o ROM:00000028o ...
		dc.w sisoomove-off_26
		dc.w sisooride-off_26
		dc.w sballinit-off_26
		dc.w _jump$keba-off_26
		dc.w sballmove-off_26
; ---------------------------------------------------------------------------

sisooinit:				; DATA XREF: ROM:off_26o
		addq.b	#2,$24(a0)
		move.l	#$144EC,4(a0)
		move.w	#$3CE,2(a0)
		bsr.w	$FFFF8E96	; XREF:	dualmodesub
		or.b	#4,1(a0)
		move.b	#4,$18(a0)
		move.b	#$30,$19(a0) ; '0'
		move.w	8(a0),$30(a0)
		tst.b	$28(a0)
		bne.s	_worknai$feba
		bsr.w	$FFFF998C	; XREF:	actwkchk2
		bne.s	_worknai$feba
		move.b	#$14,0(a1)
		addq.b	#6,$24(a1)
		move.w	8(a0),8(a1)
		move.w	$C(a0),$C(a1)
		move.b	$22(a0),$22(a1)
		move.l	a0,$3C(a1)

_worknai$feba:				; CODE XREF: ROM:00000064j
					; ROM:0000006Aj
		btst	#0,$22(a0)
		beq.s	_jump$feba
		move.b	#2,$1A(a0)

_jump$feba:				; CODE XREF: ROM:00000092j
		move.b	$1A(a0),$3A(a0)

sisoomove:				; DATA XREF: ROM:00000028o
		move.b	$3A(a0),d1
		btst	#3,$22(a0)
		beq.s	_noride$geba

_rideon$geba:
		moveq	#2,d1
		lea	($FFFFB000).w,a1
		move.w	8(a0),d0
		sub.w	8(a1),d0
		bcc.s	_jump$geba
		neg.w	d0
		moveq	#0,d1

_jump$geba:				; CODE XREF: ROM:000000BAj
		cmp.w	#8,d0
		bcc.s	_jump2$geba
		moveq	#1,d1

_jump2$geba:				; CODE XREF: ROM:000000C4j
		btst	#4,$22(a0)
		beq.s	loc_11E
		moveq	#2,d2
		lea	($FFFFB040).w,a1
		move.w	8(a0),d0
		sub.w	8(a1),d0
		bcc.s	_jump3$geba
		neg.w	d0
		moveq	#0,d2

_jump3$geba:				; CODE XREF: ROM:000000DEj
		cmp.w	#8,d0
		bcc.s	loc_EC
		moveq	#1,d2

loc_EC:					; CODE XREF: ROM:000000E8j
		add.w	d2,d1
		cmp.w	#3,d1
		bne.s	_jump44$geba
		addq.w	#1,d1

_jump44$geba:				; CODE XREF: ROM:000000F2j
		lsr.w	#1,d1
		bra.s	loc_11E
; ---------------------------------------------------------------------------

_noride$geba:				; CODE XREF: ROM:000000AAj
		btst	#4,$22(a0)
		beq.s	loc_11E
		moveq	#2,d1
		lea	($FFFFB040).w,a1
		move.w	8(a0),d0
		sub.w	8(a1),d0
		bcc.s	loc_116
		neg.w	d0
		moveq	#0,d1

loc_116:				; CODE XREF: ROM:00000110j
		cmp.w	#8,d0
		bcc.s	loc_11E
		moveq	#1,d1

loc_11E:				; CODE XREF: ROM:000000CEj
					; ROM:000000F8j ...
		bsr.w	sisoosub2
		lea	($1448A).l,a2
		btst	#0,$1A(a0)
		beq.s	loc_136
		lea	($144BB).l,a2

loc_136:				; CODE XREF: ROM:0000012Ej
		lea	($FFFFB000).w,a1
		move.w	$12(a1),$38(a0)
		move.w	8(a0),-(sp)
		moveq	#0,d1
		move.b	$19(a0),d1
		moveq	#8,d3
		move.w	(sp)+,d4
		bra.w	$FFFFAD94	; XREF:	ridechksub_t
; ---------------------------------------------------------------------------

sisooride:				; DATA XREF: ROM:0000002Ao
		rts
; ---------------------------------------------------------------------------

sisoosub:
		moveq	#2,d1
		lea	($FFFFB000).w,a1
		move.w	8(a0),d0
		sub.w	8(a1),d0
		bcc.s	_jump$ieba
		neg.w	d0
		moveq	#0,d1

_jump$ieba:				; CODE XREF: ROM:00000162j
		cmp.w	#8,d0
		bcc.s	sisoosub2
		moveq	#1,d1

; =============== S U B	R O U T	I N E =======================================


sisoosub2:				; CODE XREF: ROM:loc_11Ep
					; ROM:0000016Cj
		move.b	$1A(a0),d0
		cmp.b	d1,d0
		beq.s	_end$jeba
		bcc.s	loc_17C
		addq.b	#2,d0

loc_17C:				; CODE XREF: sisoosub2+8j
		subq.b	#1,d0
		move.b	d0,$1A(a0)
		move.b	d1,$3A(a0)
		bclr	#0,1(a0)
		btst	#1,$1A(a0)
		beq.s	_end$jeba
		bset	#0,1(a0)

_end$jeba:				; CODE XREF: sisoosub2+6j
					; sisoosub2+22j
		rts
; End of function sisoosub2

; ---------------------------------------------------------------------------

sballinit:				; DATA XREF: ROM:0000002Co
		addq.b	#2,$24(a0)
		move.l	#$14578,4(a0)
		move.w	#$3CE,2(a0)
		bsr.w	$FFFF8E96	; XREF:	dualmodesub
		or.b	#4,1(a0)
		move.b	#4,$18(a0)
		move.b	#$8B,$20(a0)
		move.b	#$C,$19(a0)
		move.w	8(a0),$30(a0)
		add.w	#$28,8(a0) ; '('
		add.w	#$10,$C(a0)
		move.w	$C(a0),$34(a0)
		move.b	#1,$1A(a0)
		btst	#0,$22(a0)
		beq.s	_jump$keba
		sub.w	#$50,8(a0) ; 'P'
		move.b	#2,$3A(a0)

_jump$keba:				; CODE XREF: ROM:000001EEj
					; DATA XREF: ROM:0000002Eo
		move.l	$3C(a0),a1
		moveq	#0,d0
		move.b	$3A(a0),d0
		sub.b	$3A(a1),d0
		beq.s	loc_252
		bcc.s	_jump$leba
		neg.b	d0

_jump$leba:				; CODE XREF: ROM:0000020Cj
		move.w	#$F7E8,d1
		move.w	#$FEEC,d2
		cmp.b	#1,d0
		beq.s	loc_236
		move.w	#$F510,d1
		move.w	#$FF34,d2
		cmp.w	#$A00,$38(a1)
		blt.s	loc_236
		move.w	#$F200,d1
		move.w	#$FF60,d2

loc_236:				; CODE XREF: ROM:0000021Cj
					; ROM:0000022Cj
		move.w	d1,$12(a0)
		move.w	d2,$10(a0)
		move.w	8(a0),d0
		sub.w	$30(a0),d0
		bcc.s	_jump2$leba
		neg.w	$10(a0)

_jump2$leba:				; CODE XREF: ROM:00000246j
		addq.b	#2,$24(a0)
		bra.s	sballmove
; ---------------------------------------------------------------------------

loc_252:				; CODE XREF: ROM:0000020Aj
		lea	($14480).l,a2
		moveq	#0,d0
		move.b	$1A(a1),d0
		move.w	#$28,d2	; '('
		move.w	8(a0),d1
		sub.w	$30(a0),d1
		bcc.s	_jump0$leba
		neg.w	d2
		addq.w	#2,d0

_jump0$leba:				; CODE XREF: ROM:0000026Aj
		add.w	d0,d0
		move.w	$34(a0),d1
		add.w	(a2,d0.w),d1
		move.w	d1,$C(a0)
		add.w	$30(a0),d2
		move.w	d2,8(a0)
		clr.w	$E(a0)
		clr.w	$A(a0)
		rts
; ---------------------------------------------------------------------------

sballmove:				; CODE XREF: ROM:00000250j
					; DATA XREF: ROM:00000030o
		tst.w	$12(a0)
		bpl.s	_down$meba

_up$meba:				; XREF:	speedset
		bsr.w	$FFFF85DA
		move.w	$34(a0),d0
		sub.w	#$2F,d0	; '/'
		cmp.w	$C(a0),d0
		bgt.s	_end$meba
		bsr.w	$FFFF85DA	; XREF:	speedset

_end$meba:				; CODE XREF: ROM:000002A6j
		rts
; ---------------------------------------------------------------------------

_down$meba:				; CODE XREF: ROM:00000294j
		bsr.w	$FFFF85DA	; XREF:	speedset
		move.l	$3C(a0),a1
		lea	($14480).l,a2
		moveq	#0,d0
		move.b	$1A(a1),d0
		move.w	8(a0),d1
		sub.w	$30(a0),d1
		bcc.s	_jump0$meba
		addq.w	#2,d0

_jump0$meba:				; CODE XREF: ROM:000002CAj
		add.w	d0,d0
		move.w	$34(a0),d1
		add.w	(a2,d0.w),d1
		cmp.w	$C(a0),d1
		bgt.s	return_322
		move.l	$3C(a0),a1
		moveq	#2,d1
		tst.w	$10(a0)
		bmi.s	_jump$meba
		moveq	#0,d1

_jump$meba:				; CODE XREF: ROM:000002E8j
		move.b	d1,$3A(a1)
		move.b	d1,$3A(a0)
		cmp.b	$1A(a1),d1
		beq.s	_jump2$meba
		lea	($FFFFB000).w,a2
		bclr	#3,$22(a1)
		beq.s	_jump1$meba
		bsr.s	_sub$meba

_jump1$meba:				; CODE XREF: ROM:00000304j
		lea	($FFFFB040).w,a2
		bclr	#4,$22(a1)
		beq.s	_jump2$meba
		bsr.s	_sub$meba

_jump2$meba:				; CODE XREF: ROM:000002F8j
					; ROM:00000312j
		clr.w	$10(a0)
		clr.w	$12(a0)
		subq.b	#2,$24(a0)

return_322:				; CODE XREF: ROM:000002DCj
		rts

; =============== S U B	R O U T	I N E =======================================


_sub$meba:				; CODE XREF: ROM:00000306p
					; ROM:00000314p
		move.w	$12(a0),$12(a2)
		neg.w	$12(a2)
		bset	#1,$22(a2)
		bclr	#3,$22(a2)
		clr.b	$3C(a2)
		move.b	#$10,$1C(a2)
		move.b	#2,$24(a2)
		move.w	#$CC,d0	; 'Ì'
		jmp	($12FC).l	; XREF:	soundset
; End of function _sub$meba

; ---------------------------------------------------------------------------
		dc.w	 -8,  -$1C,  -$2F,  -$1C,    -8; 0
		dc.b  $14, $14,	$16, $18, $1A, $1C, $1A, $18; 0
		dc.b  $16, $14,	$13, $12, $11, $10,  $F,  $E; 8
		dc.b   $D,  $C,	 $B,  $A,   9,	 8,   7,   6; 16
		dc.b	5,   4,	  3,   2,   1,	 0,  -1,  -2; 24
		dc.b   -3,  -4,	 -5,  -6,  -7,	-8,  -9, -$A; 32
		dc.b  -$B, -$C,	-$D, -$E, -$E, -$E, -$E, -$E; 40
		dc.b  -$E,   5,	  5,   5,   5,	 5,   5,   5; 48
		dc.b	5,   5,	  5,   5,   5,	 5,   5,   5; 56
		dc.b	5,   5,	  5,   5,   5,	 5,   5,   5; 64
		dc.b	5,   5,	  5,   5,   5,	 5,   5,   5; 72
		dc.b	5,   5,	  5,   5,   5,	 5,   5,   5; 80
		dc.b	5,   5,	  5,   5,   5,	 5,   5,   5; 88
		dc.b	5,   0		; 96
sisoopat:	dc.w word_3C8-sisoopat	; DATA XREF: ROM:sisoopato
					; ROM:000003C2o ...
		dc.w word_40A-sisoopat
		dc.w word_3C8-sisoopat
		dc.w word_40A-sisoopat
word_3C8:	dc.w 8			; DATA XREF: ROM:sisoopato
					; ROM:000003C4o
		dc.w $FC05,$4014,$400A,$FFF8; 0
		dc.w  $C01,$2012,$2009,$FFFC; 4
		dc.w $E405,$4006,$4003,$FFD0; 8
		dc.w $EC05,$400A,$4005,$FFE0; 12
		dc.w $F405,$400A,$4005,$FFF0; 16
		dc.w $FC05,$400A,$4005,	   0; 20
		dc.w  $405,$400A,$4005,	 $10; 24
		dc.w  $C05,$400E,$4007,	 $20; 28
word_40A:	dc.w 8			; DATA XREF: ROM:000003C2o
					; ROM:000003C6o
		dc.w $FC05,$4014,$400A,$FFF8; 0
		dc.w  $C01,$2012,$2009,$FFFC; 4
		dc.w $F405,$4000,$4000,$FFD0; 8
		dc.w $F405,$4002,$4001,$FFE0; 12
		dc.w $F405,$4002,$4001,$FFF0; 16
		dc.w $F405,$4002,$4001,	   0; 20
		dc.w $F405,$4002,$4001,	 $10; 24
		dc.w $F405,$4800,$4800,	 $20; 28
sballpat:	dc.w sballsp0-sballpat	; DATA XREF: ROM:sballpato
					; ROM:0000044Eo
		dc.w sballsp0-sballpat
sballsp0:	dc.w 1			; DATA XREF: ROM:sballpato
					; ROM:0000044Eo
		dc.w $F805,$4014,$400A,$FFF8; 0
; ---------------------------------------------------------------------------
		nop
; end of 'ROM'


		END
