

;
; +-------------------------------------------------------------------------+
; |	This file is generated by The Interactive Disassembler (IDA)	    |
; |	Copyright (c) 2007 by DataRescue sa/nv,	<ida@datarescue.com>	    |
; |	    Licensed to: GVU, Gerhard Uphoff, 1	user, adv, 10/2007	    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	34912FC40E7A49001D08CAD86D9A2533

; ---------------------------------------------------------------------------
; File Name   :	Z:\emu\gen\s2a\sym\copies\code_56424
; Format      :	Binary file
; Base Address:	0000h Range: 0000h - 0150h Loaded length: 0150h

; Processor:	    68000
; Target Assembler: 680x0 Assembler in MRI compatible mode
; This file should be compiled with "as	-M"

; ===========================================================================

; Segment type:	Pure code
; segment "ROM"

redz:
		moveq	#0,d0
		move.b	$24(a0),d0
		move.w	redz_move_tbl(pc,d0.w),d1
		jmp	redz_move_tbl(pc,d1.w)
; ---------------------------------------------------------------------------
redz_move_tbl:	dc.w redzinit-redz_move_tbl ; DATA XREF: ROM:redz_move_tblo
					; ROM:00000010o ...
		dc.w redzmove-redz_move_tbl
		dc.w redzdie-redz_move_tbl
; ---------------------------------------------------------------------------

redzinit:				; DATA XREF: ROM:redz_move_tblo
		move.l	#$14F16,4(a0)
		move.w	#$500,2(a0)
		move.b	#4,1(a0)
		move.b	#4,$18(a0)
		move.b	#$10,$19(a0)
		move.b	#$10,$16(a0)
		move.b	#6,$17(a0)
		move.b	#$C,$20(a0)
		bsr.w	$156		; XREF:	speedset
		jsr	$128C6		; XREF:	emycol_d
		tst.w	d1
		bpl.s	_end$pdba
		add.w	d1,$C(a0)
		move.w	#0,$12(a0)
		addq.b	#2,$24(a0)
		bchg	#0,$22(a0)

_end$pdba:				; CODE XREF: ROM:00000052j
		rts
; ---------------------------------------------------------------------------

redzmove:				; DATA XREF: ROM:00000010o
		moveq	#0,d0
		move.b	$25(a0),d0
		move.w	redzmove_tbl(pc,d0.w),d1
		jsr	redzmove_tbl(pc,d1.w)
		lea	($14F08).l,a1
		bsr.w	$150		; XREF:	patchg
		move.w	8(a0),d0
		and.w	#$FF80,d0
		sub.w	($FFFFF7DA).w,d0
		cmp.w	#$280,d0
		bhi.w	_frameout$qdba
		bra.w	$144		; XREF:	actionsub
; ---------------------------------------------------------------------------

_frameout$qdba:				; CODE XREF: ROM:00000092j
		lea	($FFFFFC00).w,a2
		moveq	#0,d0
		move.b	$23(a0),d0
		beq.s	_frameout2$qdba
		bclr	#7,2(a2,d0.w)

_frameout2$qdba:			; CODE XREF: ROM:000000A4j
		bra.w	$14A		; XREF:	frameout
; ---------------------------------------------------------------------------
redzmove_tbl:	dc.w redz_0-redzmove_tbl ; DATA	XREF: ROM:redzmove_tblo
					; ROM:000000B2o
		dc.w redz_1-redzmove_tbl
; ---------------------------------------------------------------------------

redz_0:					; DATA XREF: ROM:redzmove_tblo
		subq.w	#1,$30(a0)
		bpl.s	_jump$sdba
		addq.b	#2,$25(a0)
		move.w	#$FF80,$10(a0)
		move.b	#1,$1C(a0)
		bchg	#0,$22(a0)
		bne.s	_jump$sdba
		neg.w	$10(a0)

_jump$sdba:				; CODE XREF: ROM:000000B8j
					; ROM:000000D0j
		rts
; ---------------------------------------------------------------------------

redz_1:					; DATA XREF: ROM:000000B2o
		bsr.w	$15C		; XREF:	speedset2
		jsr	$128C6		; XREF:	emycol_d
		cmp.w	#$FFF8,d1
		blt.s	_jump2$tdba
		cmp.w	#$C,d1
		bge.s	_jump2$tdba
		add.w	d1,$C(a0)

_end$tdba:
		rts
; ---------------------------------------------------------------------------

_jump2$tdba:				; CODE XREF: ROM:000000E6j
					; ROM:000000ECj
		subq.b	#2,$25(a0)
		move.w	#$3B,$30(a0) ; ';'
		move.w	#0,$10(a0)
		move.b	#0,$1C(a0)
		rts
; ---------------------------------------------------------------------------

redzdie:				; DATA XREF: ROM:00000012o
		bra.w	$14A		; XREF:	frameout
; ---------------------------------------------------------------------------
redzchg:	dc.w redzchg0-redzchg	; DATA XREF: ROM:redzchgo
					; ROM:00000112o
		dc.w redzchg1-redzchg
redzchg0:	dc.b   9,  1,$FF	; 0 ; DATA XREF: ROM:redzchgo
redzchg1:	dc.b   9,  0,  1,  2	; 0 ; DATA XREF: ROM:00000112o
		dc.b   1,$FF,  0	; 4
redzpat:	dc.w redzsp0-redzpat	; DATA XREF: ROM:redzpato
					; ROM:00000120o ...
		dc.w redzsp1-redzpat
		dc.w redzsp2-redzpat
redzsp0:	dc.w 1			; DATA XREF: ROM:redzpato
		dc.w $F00F,    0,    0,$FFF0; 0
redzsp1:	dc.w 1			; DATA XREF: ROM:00000120o
		dc.w $F00F,  $10,    8,$FFF0; 0
redzsp2:	dc.w 1			; DATA XREF: ROM:00000122o
		dc.w $F00F,  $20,  $10,$FFF0; 0
; end of 'ROM'


		END
