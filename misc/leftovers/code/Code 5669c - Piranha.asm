

;
; +-------------------------------------------------------------------------+
; |	This file is generated by The Interactive Disassembler (IDA)	    |
; |	Copyright (c) 2007 by DataRescue sa/nv,	<ida@datarescue.com>	    |
; |	    Licensed to: GVU, Gerhard Uphoff, 1	user, adv, 10/2007	    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	8A619B914AE4C3A8D4A21AE5169F8788

; ---------------------------------------------------------------------------
; File Name   :	Z:\emu\gen\s2a\sym\copies\code_5669c
; Format      :	Binary file
; Base Address:	0000h Range: 0000h - 00E8h Loaded length: 00E8h

; Processor:	    68000
; Target Assembler: 680x0 Assembler in MRI compatible mode
; This file should be compiled with "as	-M"

; ===========================================================================

; Segment type:	Pure code
; segment "ROM"

wfish2:
		moveq	#0,d0
		move.b	$24(a0),d0
		move.w	off_12(pc,d0.w),d1
		jsr	off_12(pc,d1.w)
		bra.w	$E8		; XREF:	frameoutchk
; ---------------------------------------------------------------------------
off_12:		dc.w loc_16-off_12	; DATA XREF: ROM:off_12o ROM:00000014o
		dc.w loc_50-off_12
; ---------------------------------------------------------------------------

loc_16:					; DATA XREF: ROM:off_12o
		addq.b	#2,$24(a0)
		move.l	#$165A6,4(a0)
		move.w	#$41C,2(a0)
		bsr.w	$F4		; XREF:	dualmodesub
		move.b	#4,1(a0)
		move.b	#4,$18(a0)
		move.b	#9,$20(a0)
		move.b	#$10,$19(a0)
		move.w	#$FC00,$12(a0)
		move.w	$C(a0),$30(a0)

loc_50:					; DATA XREF: ROM:00000014o
		lea	($16594).l,a1
		bsr.w	$EE		; XREF:	patchg
		bsr.w	$FA		; XREF:	speedset2
		add.w	#$18,$12(a0)
		move.w	$30(a0),d0
		cmp.w	$C(a0),d0
		bcc.s	loc_78
		move.w	d0,$C(a0)
		move.w	#$FB00,$12(a0)

loc_78:					; CODE XREF: ROM:0000006Cj
		move.b	#1,$1C(a0)
		sub.w	#$C0,d0	; 'À'
		cmp.w	$C(a0),d0
		bcc.s	return_9A
		move.b	#0,$1C(a0)
		tst.w	$12(a0)
		bmi.s	return_9A
		move.b	#2,$1C(a0)

return_9A:				; CODE XREF: ROM:00000086j
					; ROM:00000092j
		rts
; ---------------------------------------------------------------------------
off_9C:		dc.w byte_A2-off_9C	; DATA XREF: ROM:off_9Co ROM:0000009Eo ...
		dc.w byte_A6-off_9C
		dc.w byte_AA-off_9C
byte_A2:	dc.b   7,  0,  1,$FF	; 0 ; DATA XREF: ROM:off_9Co
byte_A6:	dc.b   3,  0,  1,$FF	; 0 ; DATA XREF: ROM:0000009Eo
byte_AA:	dc.b   7,  0,$FF,  0	; 0 ; DATA XREF: ROM:000000A0o
wfish2pat:	dc.w word_B2-wfish2pat	; DATA XREF: ROM:wfish2pato
					; ROM:000000B0o
		dc.w word_CC-wfish2pat
word_B2:	dc.w 3			; DATA XREF: ROM:wfish2pato
		dc.w $F005,    0,    0,$FFF4; 0
		dc.w $F001,    4,    2,	   4; 4
		dc.w	 9,   $A,    5,$FFF4; 8
word_CC:	dc.w 3			; DATA XREF: ROM:000000B0o
		dc.w $F005,    0,    0,$FFF4; 0
		dc.w $F005,    6,    3,	   2; 4
		dc.w	 9,  $10,    8,$FFF4; 8
		dc.w 0
; end of 'ROM'


		END
